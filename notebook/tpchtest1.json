{
	"name": "tpchtest1",
	"properties": {
		"bigDataPool": {
			"referenceName": "accsparkpools",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 4,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "4",
				"spark.dynamicAllocation.maxExecutors": "4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_spark",
				"display_name": "Synapse Spark"
			},
			"language_info": {
				"name": "scala"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
				"name": "accsparkpools",
				"type": "Spark",
				"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"TokenLibrary.help()"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val keyVaultName = \"accvault1\";\r\n",
					"val secretName = \"accbbstore\";"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					" import com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\r\n",
					" val secret = TokenLibrary.getSecret(keyVaultName, secretName)"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"mssparkutils.credentials.help()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					" val secret = mssparkutils.credentials.getSecret(keyVaultName, secretName)"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val sc = spark.sparkContext\r\n",
					"spark.conf.set(\"spark.storage.synapse.linkedServiceName\", \"accvault1\")\r\n",
					"spark.conf.set(\"fs.azure.account.oauth.provider.type\", \"com.microsoft.azure.synapse.tokenlibrary.LinkedServiceBasedTokenProvider\")\r\n",
					"\r\n",
					"val df = spark.read.csv(\"abfss://tpchdata@accbbstore.dfs.core.windows.net/CUSTOMER/*.parquet\")\r\n",
					"\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val blobsecret = \"accbbstore\"\r\n",
					"//val accbbstorekey = dbutils.secrets.get(scope = \"allsecrects\", key = \"accbbstore\")\r\n",
					"val accbbstorekey = mssparkutils.credentials.getSecret(keyVaultName, blobsecret)"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"spark.conf.set(\r\n",
					"  \"fs.azure.account.key.accbbstore.blob.core.windows.net\",\r\n",
					"  accbbstorekey)"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val customer = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/CUSTOMER/*.parquet\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(customer)"
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW customer\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/CUSTOMER/*.parquet\"\r\n",
					")"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val lineitem = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/LINEITEM/*.parquet\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW lineitem\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/LINEITEM/*.parquet\"\r\n",
					")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val nation = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/NATION/*.parquet\")"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW nation\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/NATION/*.parquet\"\r\n",
					")"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val orders = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/ORDERS/*.parquet\")"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW orders\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/ORDERS/*.parquet\"\r\n",
					")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val part = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/PART/*.parquet\")"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW part\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/PART/*.parquet\"\r\n",
					")"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val partsupp = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/PARTSUPP/*.parquet\")"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW partsupp\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/PARTSUPP/*.parquet\"\r\n",
					")"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val region = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/REGION/*.parquet\")"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW region\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/REGION/*.parquet\"\r\n",
					")"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val supplier = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/SUPPLIER/*.parquet\")"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TEMPORARY VIEW supplier\r\n",
					"USING org.apache.spark.sql.parquet\r\n",
					"OPTIONS (\r\n",
					"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/SUPPLIER/*.parquet\"\r\n",
					")"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"select\r\n",
					"       l_returnflag,\r\n",
					"       l_linestatus,\r\n",
					"       sum(l_quantity) as sum_qty,\r\n",
					"       sum(l_extendedprice) as sum_base_price,\r\n",
					"       sum(l_extendedprice * (1-l_discount)) as sum_disc_price,\r\n",
					"       sum(l_extendedprice * (1-l_discount) * (1+l_tax)) as sum_charge,\r\n",
					"       avg(l_quantity) as avg_qty,\r\n",
					"       avg(l_extendedprice) as avg_price,\r\n",
					"       avg(l_discount) as avg_disc,\r\n",
					"       count(*) as count_order\r\n",
					" from\r\n",
					"       lineitem\r\n",
					" where\r\n",
					"       l_shipdate <= date_add(to_date('1998-12-01'), -90)\r\n",
					" group by\r\n",
					"       l_returnflag,\r\n",
					"       l_linestatus\r\n",
					" order by\r\n",
					"       l_returnflag,\r\n",
					"       l_linestatus"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": true
				},
				"source": [
					"%%sql\r\n",
					"Select \r\n",
					"       a.l_returnflag,\r\n",
					"       a.l_linestatus,\r\n",
					"       sum(a.l_quantity) as sum_qty,\r\n",
					"       sum(a.l_extendedprice) as sum_base_price,\r\n",
					"       sum(a.l_extendedprice * (1-a.l_discount)) as sum_disc_price,\r\n",
					"       sum(a.l_extendedprice * (1-a.l_discount) * (1+a.l_tax)) as sum_charge,\r\n",
					"       avg(a.l_quantity) as avg_qty,\r\n",
					"       avg(a.l_extendedprice) as avg_price,\r\n",
					"       avg(a.l_discount) as avg_disc,\r\n",
					"       count(*) as count_order\r\n",
					"from \r\n",
					"lineitem a join orders b on a.L_ORDERKEY = b.O_ORDERKEY \r\n",
					"join customer c on b.O_CUSTKEY = c.C_CUSTKEY\r\n",
					"join partsupp d on a.L_SUPPKEY = d.PS_SUPPKEY\r\n",
					"join part e on d.PS_PARTKEY = e.P_PARTKEY\r\n",
					"join supplier f on d.PS_SUPPKEY = f.S_SUPPKEY\r\n",
					"join nation g on f.S_NATIONKEY = g.N_NATIONKEY\r\n",
					"join region h on g.N_REGIONKEY = h.R_REGIONKEY\r\n",
					" where\r\n",
					"       a.l_shipdate <= date_add(to_date('1998-12-01'), -90)\r\n",
					" group by\r\n",
					"       a.l_returnflag,\r\n",
					"       a.l_linestatus\r\n",
					" order by\r\n",
					"       a.l_returnflag,\r\n",
					"       a.l_linestatus"
				],
				"execution_count": 50
			}
		]
	}
}
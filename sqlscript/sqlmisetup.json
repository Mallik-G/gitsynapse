{
	"name": "sqlmisetup",
	"properties": {
		"content": {
			"query": "use master;\nCreate login [accadf1] with PASSWORD='Azure!2345'\nCreate login [accadf1] FROM EXTERNAL PROVIDER;\nCREATE USER [accadf1] FROM EXTERNAL PROVIDER;\n\nGRANT CREATE ANY DATABASE to [accadf1];\n\nDROP login [accadf1];\n\nCREATE USER [accadf1] FROM EXTERNAL PROVIDER;\n\nALTER ROLE db_datareader ADD MEMBER [accadf1]\nALTER ROLE db_owner ADD MEMBER [accadf1]\nALTER ROLE db_securityadmin ADD MEMBER [accadf1]\n\nGRANT CREATE ANY DATABASE to [accadf1];\n\nGRANT ADMINISTER DATABASE BULK OPERATIONS TO [accadf1]\n\nDROP user [accadf1];\n\n\nEXEC master..sp_addsrvrolemember @loginame = N'accadf1', @rolename = N'dbcreator'\nGO\n\n\nCREATE EXTERNAL DATA SOURCE gcpnestedoutut\nWITH ( LOCATION = 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/gcpnestedoutput/')\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat WITH (  FORMAT_TYPE = PARQUET );\n\nDROP EXTERNAL TABLE gcpnestedinput\n\nUSE [arcinsight];\nGO\nCREATE EXTERNAL TABLE gcpnestedoutput\n(\n    [sys_id] VARCHAR (1000),\n    [assigned] VARCHAR (1000),\n    [company] VARCHAR(8000),\n    [assigned_to] VARCHAR(8000)\n)\nWITH (\n    LOCATION = '*.parquet',\n    DATA_SOURCE = gcpnestedoutut,\n    FILE_FORMAT = ParquetFormat\n);\n\nselect * from dbo.gcpnestedoutput\n\n\nSELECT\n        sm.[name]                                                                AS [schema_name]\n,        tb.[name]                                                                AS [table_name]\n,        st.[name]                                                                AS [stats_name]\n,        st.[has_filter]                                                            AS [stats_is_filtered]\n,       ROW_NUMBER()\n        OVER(ORDER BY (SELECT NULL))                                            AS [seq_nmbr]\n,                                 QUOTENAME(sm.[name])+'.'+QUOTENAME(tb.[name])  AS [two_part_name]\n,        QUOTENAME(DB_NAME())+'.'+QUOTENAME(sm.[name])+'.'+QUOTENAME(tb.[name])  AS [three_part_name]\nFROM    sys.objects            AS ob\nJOIN    sys.stats            AS st    ON    ob.[object_id]        = st.[object_id]\nJOIN    sys.stats_columns    AS sc    ON    st.[stats_id]        = sc.[stats_id]\n                                    AND st.[object_id]        = sc.[object_id]\nJOIN    sys.columns            AS co    ON    sc.[column_id]        = co.[column_id]\n                                    AND    sc.[object_id]        = co.[object_id]\nJOIN    sys.tables            AS tb    ON    co.[object_id]        = tb.[object_id]\nJOIN    sys.schemas            AS sm    ON    tb.[schema_id]        = sm.[schema_id]\n\nselect name as username,\n       create_date,\n       modify_date,\n       type_desc as type,\n       authentication_type_desc as authentication_type\nfrom sys.database_principals\nwhere type not in ('A', 'G', 'R', 'X')\n      and sid is not null\norder by username;\n\n\nSELECT * FROM sys.sql_logins;\n\nSELECT * FROM sys.sysmembers;\n\nselect [name] as database_name,\n    database_id,\n    create_date\nfrom sys.databases\norder by name\n\nIF EXISTS(SELECT * FROM sys.databases where name='arcinsight')\n    PRINT 'The database exists' \n        else PRINT 'The database does not exist'\n\n\nselect l.name as [login name],u.name as [user name] from sysusers u inner join sys.sql_logins l on u.sid=l.sid\n\nselect [name] as database_name,\n    database_id,\n    create_date\nfrom sys.databases\norder by name\n\nIF NOT EXISTS (SELECT 1 FROM [sys].[Databases] WHERE [name]='gbhd5261')\nBEGIN\nCREATE DATABASE \"gbhd5261\";\nSELECT 'Database ''gbhd5261'' created successfully'\nEND\nELSE\nBEGIN\nSELECT 'Database already exists'\nEND\n\nIF NOT EXISTS (SELECT 1 FROM [sys].[Databases] WHERE [name]='gbhd5261')\nBEGIN\nSELECT 'Database doesnt exists'\nEND\nELSE\nBEGIN\nDROP DATABASE \"gbhd5261\";\nSELECT 'Database ''gbhd5261'' deleted successfully'\nEND\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "Built-in",
				"databaseName": "master"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}